{"version":3,"sources":["globalStyles.js","components/Background/Background.components.js","components/Background/Background.js","components/SearchBar/SearchBar.components.js","components/SearchBar/SearchBar.js","components/Weather/Weather.components.js","components/Weather/Weather.js","App.components.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Container","styled","div","BlurredBackground","Background","img","TextInput","input","InputDiv","label","Form","button","form","Button","SearchBar","setFlash","setFlashMessage","locationObj","getWeatherObj","setLocationObj","onSubmit","e","preventDefault","location","target","value","city","defaultValue","name","placeholder","WeatherContainer","Header","h1","ForecastDiv","Hint","span","em","TemperatureDiv","Temp","h3","Day","WeatherIcon","SunsetIcon","FiSunset","SunriseIcon","FiSunrise","Raindrop","WiRaindrop","Weather","weatherObj","symbol","days","d","Date","dayName","getDay","dayIndex","indexOf","icons","sun","rain","cloud","snow","list","country","map","day","key","desc","weather","description","includes","toLocaleTimeString","hour","minute","temp","min","max","humidity","sunrise","sunset","ToggleDiv","FlashContainer","ToggleUnit","units","LeftToggle","p","RightToggle","App","console","log","useState","setWeatherObj","setUnits","setSymbol","showFlash","flashMessage","a","fetch","response","json","res","cod","message","useEffect","setTimeout","onClick","duration","persistOnHover","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91aa170c.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from \"styled-components\"\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n  }\n`\n\nexport const Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  max-width: 1300px;\n  padding: 1.5rem;\n  margin: 0 auto;\n  min-height: 100vh;\n`","import styled from \"styled-components\"\n\nexport const BlurredBackground = styled.div`\n  background-image: url(\"images/default.jpg\");\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  transition: all .5s ease;\n  z-index: -1;\n  filter: blur(.25rem);\n`","import React from \"react\"\nimport { BlurredBackground } from \"./Background.components\";\n\nexport default function Background(img) {\n  return(\n    <BlurredBackground img={img}/>\n  )\n}","import styled from \"styled-components\";\n\nexport const TextInput = styled.input`\n  border: none;\n  width: 100%;\n  height: 100%;\n  padding: 0 .5rem;\n\n  &:focus {\n    border: none;\n    outline: none;\n  }\n\n  @media screen and (max-width: 768px) {\n    font-size: 1.5rem;\n\n  }\n`\n\nexport const Label = styled.label`\n\n  `\nexport const InputDiv = styled.div`\n  margin: .5rem;\n  position: relative;\n  width: 50%;\n  height: 30px;\n  border: 1px solid lightgray;\n  display: flex;\n  align-items: center;\n\n  @media screen and (max-width: 768px) {\n    width: 100%;\n    height: 50px;\n  }\n\n`\n\nexport const MyLocation = styled.button`\n  position: absolute;\n  right: 0px;\n  top: 0px;\n  height: 28px;\n  width: 75px;\n  background: lightcoral;\n  color: white;\n  border: none;\n`\n\nexport const ColumnFlex = styled.div`\n  display: flex;\n  flex-direction: column;\n\n`\n\nexport const Form = styled.form`\n  padding: .5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: .5rem;\n`\n\nexport const Button = styled.button`\n  padding: .375rem 1rem;\n  border: none;\n  border-radius: 3px;\n  background: 1px solid lightseagreen;\n  color: black;\n  background-color: white;\n  margin: .5rem 0;\n  color: white;\n  background: lightcoral;\n  transition: all 0.3s ease;\n\n  &:hover {\n    color: lightcoral;\n    background: white;\n  }\n\n  &:active {\n    outline: none;\n    border: none;\n  }\n\n  @media screen and (max-width: 768px) {\n    padding: 1rem 2rem;\n  }\n`","import React from \"react\"\nimport {\n  Form,\n  TextInput,\n  Button,\n  InputDiv,\n} from \"./SearchBar.components\";\n\nexport default function SearchBar({\n  setFlash,\n  setFlashMessage,\n  getWeatherObj,\n  locationObj,\n  setLocationObj,\n}) {\n  function submitHandler(e) {\n    e.preventDefault();\n    const location = e.target.location.value\n    if(location === \"\") {\n      setFlashMessage(\"bad query\");\n      setFlash(true)\n    } else {\n      setLocationObj({city: location})\n    }\n  }\n\n\n  return(\n    <Form onSubmit={submitHandler}>\n      <InputDiv>\n        <TextInput defaultValue={locationObj.city} name=\"location\" placeholder=\"City Name..\" />\n      </InputDiv>\n      <Button>Search</Button>\n    </Form>\n  )\n}","import styled from \"styled-components\";\nimport { WiRaindrop } from \"react-icons/wi\";\nimport { FiSunset, FiSunrise } from \"react-icons/fi\";\n\n\nexport const WeatherContainer = styled.div`\n  padding: .5rem;\n`\n\nexport const Header = styled.h1`\n  text-align: center;\n  margin-bottom: .5rem;\n  @media screen and (max-width: 768px) {\n    font-size: 2.5rem;\n  }\n`\n\nexport const ForecastDiv = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`\n\nexport const CloudIcon = styled.span`\n  font-size: 3em;\n  color: lightgray;\n`\n\nexport const Hint = styled.em`\n  text-align: center;\n  display: block;\n  margin-bottom: .5rem;\n\n  @media screen and (max-width: 768px) {\n    font-size: 1.2rem;\n  }\n`\n\nexport const TemperatureDiv = styled.div`\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media screen and (max-width: 768px) {\n    font-size: 1.5rem;\n  }\n`\n\nexport const Temp = styled.h3`\n  margin-bottom: .5rem;\n  display: flex;\n  align-items: center;\n  font-weight: bold;\n`\n\n\nexport const Day = styled.div`\n  position: relative;\n  padding: 1.5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: .5rem;\n  transition: .3s ease-in-out;\n  user-select: none;\n  border-radius: 5px;\n  background: rgb(75.3%, 75.3%, 75.3%);\n\n  &:hover {\n    transform: scale(1.05)\n  }\n\n  @media screen and (max-width: 768px) {\n    width: 95%;\n  }\n`\n\nexport const WeatherIcon = styled.span`\n  font-size : 1.5rem;\n  position: absolute;\n  top: 10px;\n  right: 10px;\n\n  @media screen and (max-width: 768px) {\n    font-size: 2.5rem;\n  }\n`\nexport const SunsetIcon = styled(FiSunset)`\n  color: orange;\n`\n\nexport const SunriseIcon = styled(FiSunrise)`\n  color: orange;\n`\n\nexport const Raindrop = styled(WiRaindrop)`\n  color: blue;\n`","import React from \"react\";\nimport { FaSun, FaCloudRain, FaSnowflake } from \"react-icons/fa\"\nimport { BsCloudFill } from \"react-icons/bs\"\n\nimport { \n  WeatherContainer, \n  ForecastDiv,\n  Header,\n  Hint,\n  TemperatureDiv,\n  Temp,\n  Day,\n  WeatherIcon,\n  SunsetIcon,\n  SunriseIcon,\n  Raindrop\n} from \"./Weather.components\";\n\nexport default function Weather({\n  weatherObj,\n  locationObj,\n  symbol,\n}) {\n  let days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  let d = new Date();\n  let dayName = days[d.getDay()];\n  let dayIndex = days.indexOf(dayName);\n\n  let icons = {\n    sun: <FaSun />,\n    rain: <FaCloudRain />,\n    cloud: <BsCloudFill />,\n    snow: <FaSnowflake />\n  }\n  function getWeatherIcon(desc) {\n    if(desc.includes(\"sun\")) {\n      return icons.sun;\n    }\n    if(desc.includes(\"rain\")) {\n      return icons.rain;\n    }\n    if(desc.includes(\"snow\")) {\n      return icons.snow;\n    }\n    if(desc.includes(\"cloud\")) {\n      return icons.cloud;\n    }\n  }\n  return( \n      <WeatherContainer>\n        {\n          locationObj.city && weatherObj.list && \n          <Header>{locationObj.city + \", \" + weatherObj.city.country}</Header>\n        }\n        {\n        weatherObj && weatherObj.list && \n        <ForecastDiv>\n          { weatherObj.list.map(day => \n          <Day key={days[(dayIndex) % 7]}>\n            <WeatherIcon>{getWeatherIcon(day.weather[0].description)}</WeatherIcon>\n            <Header>{days[(dayIndex ++) % 7]}</Header>\n            <Hint>{day.weather[0].description}</Hint>\n            {\n              <TemperatureDiv>\n                \n                <Temp> {(new Date()).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}: &nbsp;{day.temp.day}{symbol}</Temp>\n                <Temp> Min: &nbsp;{day.temp.min}{symbol}</Temp>\n                <Temp> Max: &nbsp;{day.temp.max}{symbol}</Temp>\n                <Temp> Humidity({<Raindrop />}): &nbsp;{day.humidity}%</Temp>\n                <Temp> Sunrise({<SunriseIcon />}): {new Date(day.sunrise * 1000).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}</Temp>\n                <Temp> Sunset({<SunsetIcon />}): {new Date(day.sunset * 1000).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}</Temp>\n              </TemperatureDiv>\n            }\n          </Day>)\n          }\n        </ForecastDiv>\n        }\n      </WeatherContainer>\n  )\n}","import styled from \"styled-components\"\n\nexport const ToggleDiv = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  height: 40px;\n  width: 100px;\n  background: white;\n  border-top-left-radius: 20px;\n  border-top-right-radius: 20px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  padding: 0 5px;\n`\n\nexport const FlashContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  padding: .5rem 1.25rem;\n  margin: .5rem 0;\n  background: lightcoral;\n  color: white;\n  border-radius: 5px\n`\n\nexport const ToggleUnit = styled.div`\n  width: 40px;\n  height: 35px;\n  z-index: 6;\n  border-radius: 50%;\n  margin: 0;\n  margin-left: ${({units}) => (units === \"metric\" ? 0 : \"auto\")};\n  transition: all .3s ease-in-out;\n  background: lightskyblue;\n`\n\nexport const LeftToggle = styled.p`\n  position: absolute;\n  left: 10px;\n  z-index: 5;\n  font-size: 1.5rem;\n`\n\nexport const RightToggle = styled.p`\n  position: absolute;\n  z-index: 5;\n  font-size: 1.5rem;\n  right: 15px;\n  font-size: 1.4rem;\n  color: black;\n`","import React, { useState, useEffect } from 'react';\nimport { \n  GlobalStyle, \n  Container,\n} from \"./globalStyles\"\nimport { Background, SearchBar, Weather } from \"./components\"\nimport { FlashContainer, ToggleUnit, ToggleDiv, RightToggle, LeftToggle } from \"./App.components\";\nimport FlashMessage from \"react-flash-message\";\nimport { RiCelsiusFill, RiFahrenheitFill } from \"react-icons/ri\";\n\n\nfunction App() {\n  console.log(\"App runs one\")\n  const [weatherObj, setWeatherObj] = useState({});\n  const [locationObj, setLocationObj] = useState({})\n  const [units, setUnits] = useState(\"metric\")\n  const [symbol, setSymbol] = useState(<RiCelsiusFill />)\n\n  // FlashMessage States\n  const [showFlash, setFlash] = useState(false)\n  const [flashMessage, setFlashMessage] = useState(\"Default Flash Message\")\n  \n  // Set symbol when unit changes\n  \n  useEffect(()   => {\n    if(weatherObj.list) {\n      setSymbol(units === \"metric\" ? <RiCelsiusFill /> : <RiFahrenheitFill />);\n      getWeatherObj()\n    }\n  }, [units])\n  \n\n  // Set showFlash state back to false after message fades\n  useEffect(() => {\n    if(showFlash) { \n      setTimeout(() => {\n        setFlash(false)\n      }, 3000)\n    }\n  }, [showFlash])\n\n  // Call OpenWeather API after locationObj is changed\n  useEffect(() => {\n    if(locationObj.city) {\n      getWeatherObj()\n    }\n  }, [locationObj])\n\n  // Geolocation API\n  function getCoords() {\n    if(navigator.geolocation) {\n      setFlashMessage(\"Loading...\");\n      setFlash(true);\n      navigator.geolocation.getCurrentPosition(success, error)\n    } else {\n      setFlashMessage(\"Geolocation not supported on you browser!\")\n      setFlash(true);\n    }\n  }\n\n  // Use HTML5 Geolocation's coords to get city name\n  async function getCity(lat, long) {\n    const response = await fetch(`https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${lat}&longitude=${long}&localityLanguage=en`)\n    const res = await response.json()\n    setLocationObj(res);\n  }\n\n  // OpenWeather API\n  async function getWeatherObj() {\n    setFlashMessage(\"Loading...\")\n    setFlash(true);\n    try {\n      const response = await fetch(`https://community-open-weather-map.p.rapidapi.com/forecast/daily?q=${locationObj.city}&cnt=7&units=${units}`, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"d89eb58edamsh10814d1e692895ep158751jsn8a8b4c01281a\"\n      }\n    })\n    // if(!response.ok) { throw response }\n    const res = await response.json()\n    setWeatherObj(res)\n    setFlash(false)\n    if(res.cod === \"404\") { throw res.message }\n    } catch(e) {\n      setFlashMessage(e);\n      setFlash(true);\n    }\n  }\n\n  // Callbacks for HTML Geolocation function\n  function success(position) {\n    getCity(position.coords.latitude, position.coords.longitude)\n  }\n  function error() {\n    setFlashMessage(\"Cannot Get Position!\");\n    showFlash(true);\n  }\n\n  function toggleUnits() {\n    setUnits(units === \"metric\" ? \"imperial\" : \"metric\");\n  }\n\n  return (\n    <Container>\n      <Background />\n      <ToggleDiv>\n        <LeftToggle><RiCelsiusFill /></LeftToggle>\n        <RightToggle><RiFahrenheitFill /></RightToggle>\n        <ToggleUnit onClick={toggleUnits} units={units}/>\n      </ToggleDiv>\n      {\n        showFlash && \n        <FlashContainer>\n          <FlashMessage duration={3000} persistOnHover={true}>{flashMessage}</FlashMessage>\n        </FlashContainer>\n      }\n        <GlobalStyle />\n      <SearchBar\n        setFlash={setFlash}\n        setFlashMessage={setFlashMessage}\n        getWeatherObj={getWeatherObj}\n        locationObj={locationObj}\n        setLocationObj={setLocationObj}\n      />\n      <Weather \n        getWeatherObj={getWeatherObj}\n        weatherObj={weatherObj}\n        locationObj={locationObj}\n        units={units}\n        symbol={symbol}\n      />\n    </Container>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}