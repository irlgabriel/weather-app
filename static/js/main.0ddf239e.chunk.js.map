{"version":3,"sources":["globalStyles.js","components/Background/Background.components.js","components/Background/Background.js","components/SearchBar/SearchBar.components.js","components/SearchBar/SearchBar.js","components/Weather/Weather.components.js","components/Weather/Weather.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Container","styled","div","BlurredBackground","img","Background","TextInput","input","Label","label","InputDiv","SelectInput","select","MyLocation","button","Option","option","Form","form","Button","SearchBar","getWeatherObj","locationObj","setLocationObj","getCoords","onSubmit","e","preventDefault","units","target","value","location","city","defaultValue","name","placeholder","onClick","type","htmlFor","WeatherContainer","Header","h1","ForecastDiv","Hint","span","em","TemperatureDiv","Temp","h3","Raindrop","WiRaindrop","Weather","weatherObj","weather","description","main","temp","temp_min","temp_max","humidity","App","useState","setWeatherObj","backgroundImg","setCoords","unit","setUnit","lat","long","a","fetch","response","json","res","console","log","list","success","position","coords","latitude","longitude","getCity","error","navigator","geolocation","getCurrentPosition","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ddf239e.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from \"styled-components\"\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n  }\n`\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 1300px;\n  padding: 1.5rem;\n  margin: 0 auto;\n  min-height: 100vh;\n`","import styled from \"styled-components\"\n\nexport const BlurredBackground = styled.div`\n  position: absolute;\n  z-index: -5;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-image: ${({img}) => (`url(${img.img})`)};\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  filter: blur(.5rem);\n`","import React from \"react\"\nimport { BlurredBackground } from \"./Background.components\";\n\nexport default function Background(img) {\n  return(\n    <BlurredBackground img={img}/>\n  )\n}","import styled from \"styled-components\";\n\nexport const TextInput = styled.input`\n  border: none;\n  width: 100%;\n  height: 100%;\n  padding: 0 .5rem;\n`\n\nexport const Label = styled.label`\n\n  `\nexport const InputDiv = styled.div`\n  margin: .5rem;\n  position: relative;\n  width: 50%;\n  height: 30px;\n  border: 1px solid lightgray;\n  display: flex;\n  align-items: center;\n\n  @media screen and (max-width: 768px) {\n    width: 90%;\n  }\n\n`\nexport const SelectInput = styled.select`\n\n`\n\nexport const MyLocation = styled.button`\n  position: absolute;\n  right: 0px;\n  top: 0px;\n  height: 28px;\n  width: 75px;\n  background: lightcoral;\n  color: white;\n  border: none;\n`\n\nexport const ColumnFlex = styled.div`\n  display: flex;\n  flex-direction: column;\n\n`\n\nexport const Option = styled.option`\n\n`\n\nexport const Form = styled.form`\n  padding: .5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: .5rem;\n`\n\nexport const Button = styled.button`\n  padding: .375rem 1rem;\n  border: none;\n  border-radius: 3px;\n  background: 1px solid lightseagreen;\n  color: black;\n  background-color: white;\n  margin: .5rem 0;\n  color: white;\n  background: lightcoral;\n  transition: all 0.3s ease;\n\n  &:hover {\n    color: lightcoral;\n    background: white;\n  }\n`","import React from \"react\"\nimport {\n  Form,\n  TextInput,\n  Button,\n  SelectInput,\n  Option,\n  Label,\n  InputDiv,\n  MyLocation,\n} from \"./SearchBar.components\";\n\nexport default function SearchBar({\n  getWeatherObj,\n  locationObj,\n  setLocationObj,\n  getCoords\n}) {\n  function submitHandler(e) {\n    e.preventDefault();\n    const units = e.target.units.value;\n    const location = e.target.location.value;\n    setLocationObj({city: location})\n    getWeatherObj(location, units);\n  }\n\n  return(\n    <Form onSubmit={submitHandler}>\n      <InputDiv>\n        <TextInput defaultValue={locationObj.city} name=\"location\" placeholder=\"City Name..\" />\n        <MyLocation onClick={getCoords} type=\"button\">My Location</MyLocation>\n      </InputDiv>\n      <Label htmlFor=\"units\">Units: </Label>\n      <SelectInput name=\"units\" defaultValue=\"metric\">\n        <Option value=\"metric\">Metric</Option>\n        <Option value=\"imperial\">Imperial</Option>\n      </SelectInput>\n      <Button>Search</Button>\n    </Form>\n  )\n}","import styled from \"styled-components\";\nimport { WiRaindrop } from \"react-icons/wi\";\n\n\nexport const WeatherContainer = styled.div`\n  padding: .5rem;\n  margin-top: auto;\n  min-height: 74vh;\n`\n\nexport const Header = styled.h1`\n  text-align: center;\n  margin-bottom: .5rem;\n  @media screen and (max-width: 768px) {\n    font-size: 2.5rem;\n  }\n`\n\nexport const ForecastDiv = styled.div`\n\n`\n\nexport const CloudIcon = styled.span`\n  font-size: 3em;\n  color: lightgray;\n`\n\nexport const Hint = styled.em`\n  text-align: center;\n  display: block;\n  margin-bottom: .5rem;\n\n  @media screen and (max-width: 768px) {\n    font-size: 1.2rem;\n  }\n`\n\nexport const TemperatureDiv = styled.div`\n  width: 80%;\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media screen and (max-width: 768px) {\n    font-size: 1.5rem;\n  }\n`\n\nexport const Temp = styled.h3`\n  margin-bottom: .5rem;\n  display: flex;\n  align-items: center;\n  font-weight: bold;\n`\n\nexport const Raindrop = styled(WiRaindrop)`\n  font-size: 1.5rem;\n  color: blue;\n`","import React from \"react\";\nimport { RiCelsiusFill, RiFahrenheitFill } from \"react-icons/ri\" \n\nimport { \n  WeatherContainer, \n  ForecastDiv,\n  Header,\n  Hint,\n  TemperatureDiv,\n  Temp,\n  Raindrop\n} from \"./Weather.components\";\n\nexport default function Weather({\n  weatherObj,\n  locationObj,\n  units\n}) {\n  return( \n      <WeatherContainer>\n        {\n        weatherObj && weatherObj.weather && \n        <ForecastDiv>\n          {\n            locationObj.city &&\n            <Header>{locationObj.city}</Header>\n          }\n          {\n            <Hint>{weatherObj.weather[0].description}</Hint>\n          }\n          {\n            <TemperatureDiv>\n              <Temp> Now: &nbsp;{units == \"metric\" ? <RiCelsiusFill /> : <RiFahrenheitFill />}{weatherObj.main.temp}</Temp>\n              <Temp> Min: &nbsp;{units == \"metric\" ? <RiCelsiusFill /> : <RiFahrenheitFill />}{weatherObj.main.temp_min}</Temp>\n              <Temp> Max: &nbsp;{units == \"metric\" ? <RiCelsiusFill />: <RiFahrenheitFill />}{weatherObj.main.temp_max}</Temp>\n              <Temp> Humidity({<Raindrop />}): {weatherObj.main.humidity}%</Temp>\n            </TemperatureDiv>\n          }\n        </ForecastDiv>\n        }\n      </WeatherContainer>\n  )\n}","import React, { useState } from 'react';\nimport { \n  GlobalStyle, \n  Container,\n} from \"./globalStyles\"\n\nimport { Background, SearchBar, Weather } from \"./components\"\n\n  function App() {\n  const [weatherObj, setWeatherObj] = useState({});\n  const [locationObj, setLocationObj] = useState({})\n  const [backgroundImg, setBackground] = useState('/images/rain.jpg')\n  const [coords, setCoords] = useState(\"\");\n  const [unit, setUnit] = useState(false)\n  // Geolocation API\n  function getCoords() {\n    if(navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(success, error)\n    } else {\n      setCoords(\"Geolocation not supported on you browser!\")\n    }\n  }\n\n  // Use HTML5 Geolocation's coords to get city name\n  async function getCity(lat, long) {\n    const response = await fetch(`https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${lat}&longitude=${long}&localityLanguage=en`)\n    const res = await response.json()\n    setLocationObj(res);\n    getWeatherObj(res.city)\n  }\n\n  // OpenWeather API\n  async function getWeatherObj(city, units = \"metric\") {\n    setUnit(units)\n    try {\n      const response = await fetch(`https://community-open-weather-map.p.rapidapi.com/find?cnt=1&mode=null&lon=0&type=link%252C%20accurate&lat=0&units=${units}&q=${city}`, {\n        \"method\": \"GET\",\n        \"headers\": {\n          \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"d89eb58edamsh10814d1e692895ep158751jsn8a8b4c01281a\"\n        }\n      })\n    const res = await response.json()\n    console.log(res.list[0])\n    setWeatherObj(res.list[0])\n    } catch(e) {\n      console.log(e)\n    }\n\n    // Change background to match weather info\n    \n  }\n  function success(position) {\n    setCoords({lat: position.coords.latitude, long: position.coords.longitude})\n    getCity(position.coords.latitude, position.coords.longitude)\n  }\n  function error() {\n    setCoords(\"Unable to retrieve your location!\")\n  }\n  return (\n    <Container>\n        <GlobalStyle />\n      <Background img={backgroundImg} />\n      <SearchBar\n        getWeatherObj={getWeatherObj}\n        locationObj={locationObj}\n        setLocationObj={setLocationObj}\n        getCoords={getCoords}\n      />\n      <Weather \n        getWeatherObj={getWeatherObj}\n        weatherObj={weatherObj}\n        locationObj={locationObj}\n        units={unit}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}